ARM GAS  /tmp/ccRvEjt0.s 			page 1


   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   4              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   5              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   6              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   7              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   8              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
   9              		.eabi_attribute 30, 6	@ Tag_ABI_optimization_goals
  10              		.eabi_attribute 34, 0	@ Tag_CPU_unaligned_access
  11              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  12              		.file	"timer.c"
  13              	@ GNU C (GNU Tools for ARM Embedded Processors) version 4.8.4 20140725 (release) [ARM/embedded-4_8-
  14              	@	compiled by GNU C version 4.7.4, GMP version 4.3.2, MPFR version 2.4.2, MPC version 0.8.1
  15              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  16              	@ options passed:  -I . -I ./inc
  17              	@ -iprefix /opt/gcc-arm-none-eabi-4_8-2014q3/bin/../lib/gcc/arm-none-eabi/4.8.4/
  18              	@ -isysroot /opt/gcc-arm-none-eabi-4_8-2014q3/bin/../arm-none-eabi
  19              	@ -MD src/timer.d -MF .dep/timer.o.d -MP -MQ src/timer.o
  20              	@ -D__USES_INITFINI__ -D DEBUG=1 src/timer.c -mcpu=arm7tdmi -marm
  21              	@ -auxbase-strip src/timer.o -gdwarf-2 -O0 -Wall -Wstrict-prototypes
  22              	@ -fomit-frame-pointer -fverbose-asm
  23              	@ options enabled:  -faggressive-loop-optimizations -fauto-inc-dec
  24              	@ -fbranch-count-reg -fcommon -fdelete-null-pointer-checks -fdwarf2-cfi-asm
  25              	@ -fearly-inlining -feliminate-unused-debug-types -ffunction-cse -fgcse-lm
  26              	@ -fgnu-runtime -fgnu-unique -fident -finline-atomics -fira-hoist-pressure
  27              	@ -fira-share-save-slots -fira-share-spill-slots -fivopts
  28              	@ -fkeep-static-consts -fleading-underscore -fmath-errno
  29              	@ -fmerge-debug-strings -fmove-loop-invariants -fomit-frame-pointer
  30              	@ -fpeephole -fprefetch-loop-arrays -freg-struct-return
  31              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  32              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  33              	@ -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  34              	@ -fsched-stalled-insns-dep -fshow-column -fsigned-zeros
  35              	@ -fsplit-ivs-in-unroller -fstrict-volatile-bitfields -fsync-libcalls
  36              	@ -ftrapping-math -ftree-coalesce-vars -ftree-cselim -ftree-forwprop
  37              	@ -ftree-loop-if-convert -ftree-loop-im -ftree-loop-ivcanon
  38              	@ -ftree-loop-optimize -ftree-parallelize-loops= -ftree-phiprop -ftree-pta
  39              	@ -ftree-reassoc -ftree-scev-cprop -ftree-slp-vectorize
  40              	@ -ftree-vect-loop-version -funit-at-a-time -fverbose-asm
  41              	@ -fzero-initialized-in-bss -marm -mlittle-endian
  42              	@ -mpic-data-is-text-relative -msched-prolog -mthumb-interwork
  43              	@ -mvectorize-with-neon-quad
  44              	
  45              		.text
  46              	.Ltext0:
  47              		.cfi_sections	.debug_frame
  48              		.align	2
  49              		.global	initialize_timer_tick
  50              		.type	initialize_timer_tick, %function
  51              	initialize_timer_tick:
  52              	.LFB0:
  53              		.file 1 "src/timer.c"
   1:src/timer.c   **** 
   2:src/timer.c   **** #include "lpc2378.h"
   3:src/timer.c   **** #include "bsp.h"
   4:src/timer.c   **** #include "print.h"
ARM GAS  /tmp/ccRvEjt0.s 			page 2


   5:src/timer.c   **** 
   6:src/timer.c   **** #define TICKS_PER_SEC 5
   7:src/timer.c   **** 
   8:src/timer.c   **** void switchContext(void);
   9:src/timer.c   **** void Tmr_TickISR_Handler (void);
  10:src/timer.c   **** 
  11:src/timer.c   **** 
  12:src/timer.c   **** void initialize_timer_tick(void)
  13:src/timer.c   **** {
  54              		.loc 1 13 0
  55              		.cfi_startproc
  56              		@ Function supports interworking.
  57              		@ args = 0, pretend = 0, frame = 8
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59 0000 04E02DE5 		str	lr, [sp, #-4]!	@,
  60              	.LCFI0:
  61              		.cfi_def_cfa_offset 4
  62              		.cfi_offset 14, -4
  63 0004 0CD04DE2 		sub	sp, sp, #12	@,,
  64              	.LCFI1:
  65              		.cfi_def_cfa_offset 16
  14:src/timer.c   ****     int  pclk_freq;
  15:src/timer.c   ****     int  rld_cnts;
  16:src/timer.c   ****                                                                              /* VIC timer #0 Initia
  17:src/timer.c   ****     WRITEREG32(VICINTSELECT, READREG32(VICINTSELECT) & ~(1 << VIC_TIMER0));  /* Configure the timer
  66              		.loc 1 17 0
  67 0008 BC309FE5 		ldr	r3, .L2	@ D.4643,
  68 000c B8209FE5 		ldr	r2, .L2	@ D.4643,
  69 0010 002092E5 		ldr	r2, [r2]	@ D.4644, *_2
  70 0014 1020C2E3 		bic	r2, r2, #16	@ D.4644, D.4644,
  71 0018 002083E5 		str	r2, [r3]	@ D.4644, *_1
  18:src/timer.c   **** 
  19:src/timer.c   ****     WRITEREG32(VICVECTADDR4, (INT32U)Tmr_TickISR_Handler);                   /* Set the vector addr
  72              		.loc 1 19 0
  73 001c AC309FE5 		ldr	r3, .L2+4	@ D.4643,
  74 0020 AC209FE5 		ldr	r2, .L2+8	@ Tmr_TickISR_Handler.0,
  75 0024 002083E5 		str	r2, [r3]	@ Tmr_TickISR_Handler.0, *_5
  20:src/timer.c   ****     WRITEREG32(VICINTENABLE,  (1 << VIC_TIMER0));                            /* Enable the timer in
  76              		.loc 1 20 0
  77 0028 A8309FE5 		ldr	r3, .L2+12	@ D.4643,
  78 002c 1020A0E3 		mov	r2, #16	@ tmp127,
  79 0030 002083E5 		str	r2, [r3]	@ tmp127, *_7
  21:src/timer.c   **** 
  22:src/timer.c   ****     pclk_freq     =   BSP_CPU_PclkFreq(PCLKINDX_TIMER0);        /* Get the peripheral clock frequen
  80              		.loc 1 22 0
  81 0034 0100A0E3 		mov	r0, #1	@,
  82 0038 FEFFFFEB 		bl	BSP_CPU_PclkFreq	@
  83 003c 0030A0E1 		mov	r3, r0	@ D.4644,
  84 0040 04308DE5 		str	r3, [sp, #4]	@ D.4644, pclk_freq
  23:src/timer.c   ****     rld_cnts      =   pclk_freq / TICKS_PER_SEC;                /* Calculate the # of counts necess
  85              		.loc 1 23 0
  86 0044 04309DE5 		ldr	r3, [sp, #4]	@ tmp129, pclk_freq
  87 0048 8C209FE5 		ldr	r2, .L2+16	@ tmp131,
  88 004c 9312C2E0 		smull	r1, r2, r3, r2	@, tmp130, tmp129, tmp131
  89 0050 C220A0E1 		mov	r2, r2, asr #1	@ tmp132, tmp130,
  90 0054 C33FA0E1 		mov	r3, r3, asr #31	@ tmp133, tmp129,
  91 0058 023063E0 		rsb	r3, r3, r2	@ tmp128, tmp133, tmp132
ARM GAS  /tmp/ccRvEjt0.s 			page 3


  92 005c 00308DE5 		str	r3, [sp]	@ tmp128, rld_cnts
  24:src/timer.c   **** 
  25:src/timer.c   ****     WRITEREG32(T0TCR, (1 << 1));                                /* Disable and reset counter 0 and 
  93              		.loc 1 25 0
  94 0060 78309FE5 		ldr	r3, .L2+20	@ D.4643,
  95 0064 0220A0E3 		mov	r2, #2	@ tmp134,
  96 0068 002083E5 		str	r2, [r3]	@ tmp134, *_11
  26:src/timer.c   ****     WRITEREG32(T0TCR, 0);                                       /* Clear the reset bit             
  97              		.loc 1 26 0
  98 006c 6C309FE5 		ldr	r3, .L2+20	@ D.4643,
  99 0070 0020A0E3 		mov	r2, #0	@ tmp135,
 100 0074 002083E5 		str	r2, [r3]	@ tmp135, *_12
  27:src/timer.c   ****     WRITEREG32(T0PC,  0);                                       /* Prescaler is set to no division 
 101              		.loc 1 27 0
 102 0078 64309FE5 		ldr	r3, .L2+24	@ D.4643,
 103 007c 0020A0E3 		mov	r2, #0	@ tmp136,
 104 0080 002083E5 		str	r2, [r3]	@ tmp136, *_13
  28:src/timer.c   **** 
  29:src/timer.c   ****     WRITEREG32(T0MR0, rld_cnts);
 105              		.loc 1 29 0
 106 0084 5C309FE5 		ldr	r3, .L2+28	@ D.4643,
 107 0088 00209DE5 		ldr	r2, [sp]	@ rld_cnts.1, rld_cnts
 108 008c 002083E5 		str	r2, [r3]	@ rld_cnts.1, *_14
  30:src/timer.c   ****     WRITEREG32(T0MCR, 3);                                       /* Interrupt on MR0 (reset TC), sto
 109              		.loc 1 30 0
 110 0090 54309FE5 		ldr	r3, .L2+32	@ D.4643,
 111 0094 0320A0E3 		mov	r2, #3	@ tmp137,
 112 0098 002083E5 		str	r2, [r3]	@ tmp137, *_16
  31:src/timer.c   **** 
  32:src/timer.c   ****     WRITEREG32(T0CCR, 0);                                       /* Capture is disabled.            
 113              		.loc 1 32 0
 114 009c 4C309FE5 		ldr	r3, .L2+36	@ D.4643,
 115 00a0 0020A0E3 		mov	r2, #0	@ tmp138,
 116 00a4 002083E5 		str	r2, [r3]	@ tmp138, *_17
  33:src/timer.c   ****     WRITEREG32(T0EMR, 0);                                       /* No external match output.       
 117              		.loc 1 33 0
 118 00a8 44309FE5 		ldr	r3, .L2+40	@ D.4643,
 119 00ac 0020A0E3 		mov	r2, #0	@ tmp139,
 120 00b0 002083E5 		str	r2, [r3]	@ tmp139, *_18
  34:src/timer.c   ****     WRITEREG32(T0TCR, 1);                                       /* Enable timer 0                  
 121              		.loc 1 34 0
 122 00b4 24309FE5 		ldr	r3, .L2+20	@ D.4643,
 123 00b8 0120A0E3 		mov	r2, #1	@ tmp140,
 124 00bc 002083E5 		str	r2, [r3]	@ tmp140, *_19
  35:src/timer.c   **** }
 125              		.loc 1 35 0
 126 00c0 0CD08DE2 		add	sp, sp, #12	@,,
 127              		@ sp needed	@
 128 00c4 04E09DE4 		ldr	lr, [sp], #4	@,
 129 00c8 1EFF2FE1 		bx	lr	@
 130              	.L3:
 131              		.align	2
 132              	.L2:
 133 00cc 0CF0FFFF 		.word	-4084
 134 00d0 10F1FFFF 		.word	-3824
 135 00d4 00000000 		.word	Tmr_TickISR_Handler
 136 00d8 10F0FFFF 		.word	-4080
ARM GAS  /tmp/ccRvEjt0.s 			page 4


 137 00dc 67666666 		.word	1717986919
 138 00e0 044000E0 		.word	-536854524
 139 00e4 104000E0 		.word	-536854512
 140 00e8 184000E0 		.word	-536854504
 141 00ec 144000E0 		.word	-536854508
 142 00f0 284000E0 		.word	-536854488
 143 00f4 3C4000E0 		.word	-536854468
 144              		.cfi_endproc
 145              	.LFE0:
 146              		.size	initialize_timer_tick, .-initialize_timer_tick
 147              		.align	2
 148              		.global	Tmr_TickISR_Handler
 149              		.type	Tmr_TickISR_Handler, %function
 150              	Tmr_TickISR_Handler:
 151              	.LFB1:
  36:src/timer.c   **** 
  37:src/timer.c   **** void Tmr_TickISR_Handler(void)
  38:src/timer.c   **** {
 152              		.loc 1 38 0
 153              		.cfi_startproc
 154              		@ Function supports interworking.
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157              		@ link register save eliminated.
  39:src/timer.c   ****     WRITEREG32(T0IR, 0xFF);                                     /* Clear timer #0 interrupt        
 158              		.loc 1 39 0
 159 00f8 08309FE5 		ldr	r3, .L5	@ D.4645,
 160 00fc FF20A0E3 		mov	r2, #255	@ tmp111,
 161 0100 002083E5 		str	r2, [r3]	@ tmp111, *_1
  40:src/timer.c   ****     /* Could call an C function to handle the IRQ from here. */
  41:src/timer.c   **** }
 162              		.loc 1 41 0
 163 0104 1EFF2FE1 		bx	lr	@
 164              	.L6:
 165              		.align	2
 166              	.L5:
 167 0108 004000E0 		.word	-536854528
 168              		.cfi_endproc
 169              	.LFE1:
 170              		.size	Tmr_TickISR_Handler, .-Tmr_TickISR_Handler
 171              	.Letext0:
 172              		.section	.debug_info,"",%progbits
 173              	.Ldebug_info0:
 174 0000 8A000000 		.4byte	0x8a
 175 0004 0200     		.2byte	0x2
 176 0006 00000000 		.4byte	.Ldebug_abbrev0
 177 000a 04       		.byte	0x4
 178 000b 01       		.uleb128 0x1
 179 000c 79000000 		.4byte	.LASF5
 180 0010 01       		.byte	0x1
 181 0011 00000000 		.4byte	.LASF6
 182 0015 3D000000 		.4byte	.LASF7
 183 0019 00000000 		.4byte	.Ltext0
 184 001d 0C010000 		.4byte	.Letext0
 185 0021 00000000 		.4byte	.Ldebug_line0
 186 0025 02       		.uleb128 0x2
 187 0026 04       		.byte	0x4
ARM GAS  /tmp/ccRvEjt0.s 			page 5


 188 0027 07       		.byte	0x7
 189 0028 22000000 		.4byte	.LASF0
 190 002c 03       		.uleb128 0x3
 191 002d 04       		.byte	0x4
 192 002e 05       		.byte	0x5
 193 002f 696E7400 		.ascii	"int\000"
 194 0033 02       		.uleb128 0x2
 195 0034 01       		.byte	0x1
 196 0035 08       		.byte	0x8
 197 0036 61000000 		.4byte	.LASF1
 198 003a 02       		.uleb128 0x2
 199 003b 02       		.byte	0x2
 200 003c 07       		.byte	0x7
 201 003d 0E010000 		.4byte	.LASF2
 202 0041 04       		.uleb128 0x4
 203 0042 01       		.byte	0x1
 204 0043 0C000000 		.4byte	.LASF8
 205 0047 01       		.byte	0x1
 206 0048 0C       		.byte	0xc
 207 0049 01       		.byte	0x1
 208 004a 00000000 		.4byte	.LFB0
 209 004e F8000000 		.4byte	.LFE0
 210 0052 00000000 		.4byte	.LLST0
 211 0056 01       		.byte	0x1
 212 0057 78000000 		.4byte	0x78
 213 005b 05       		.uleb128 0x5
 214 005c 6F000000 		.4byte	.LASF3
 215 0060 01       		.byte	0x1
 216 0061 0E       		.byte	0xe
 217 0062 2C000000 		.4byte	0x2c
 218 0066 02       		.byte	0x2
 219 0067 91       		.byte	0x91
 220 0068 74       		.sleb128 -12
 221 0069 05       		.uleb128 0x5
 222 006a 34000000 		.4byte	.LASF4
 223 006e 01       		.byte	0x1
 224 006f 0F       		.byte	0xf
 225 0070 2C000000 		.4byte	0x2c
 226 0074 02       		.byte	0x2
 227 0075 91       		.byte	0x91
 228 0076 70       		.sleb128 -16
 229 0077 00       		.byte	0
 230 0078 06       		.uleb128 0x6
 231 0079 01       		.byte	0x1
 232 007a FA000000 		.4byte	.LASF9
 233 007e 01       		.byte	0x1
 234 007f 25       		.byte	0x25
 235 0080 01       		.byte	0x1
 236 0081 F8000000 		.4byte	.LFB1
 237 0085 0C010000 		.4byte	.LFE1
 238 0089 02       		.byte	0x2
 239 008a 7D       		.byte	0x7d
 240 008b 00       		.sleb128 0
 241 008c 01       		.byte	0x1
 242 008d 00       		.byte	0
 243              		.section	.debug_abbrev,"",%progbits
 244              	.Ldebug_abbrev0:
ARM GAS  /tmp/ccRvEjt0.s 			page 6


 245 0000 01       		.uleb128 0x1
 246 0001 11       		.uleb128 0x11
 247 0002 01       		.byte	0x1
 248 0003 25       		.uleb128 0x25
 249 0004 0E       		.uleb128 0xe
 250 0005 13       		.uleb128 0x13
 251 0006 0B       		.uleb128 0xb
 252 0007 03       		.uleb128 0x3
 253 0008 0E       		.uleb128 0xe
 254 0009 1B       		.uleb128 0x1b
 255 000a 0E       		.uleb128 0xe
 256 000b 11       		.uleb128 0x11
 257 000c 01       		.uleb128 0x1
 258 000d 12       		.uleb128 0x12
 259 000e 01       		.uleb128 0x1
 260 000f 10       		.uleb128 0x10
 261 0010 06       		.uleb128 0x6
 262 0011 00       		.byte	0
 263 0012 00       		.byte	0
 264 0013 02       		.uleb128 0x2
 265 0014 24       		.uleb128 0x24
 266 0015 00       		.byte	0
 267 0016 0B       		.uleb128 0xb
 268 0017 0B       		.uleb128 0xb
 269 0018 3E       		.uleb128 0x3e
 270 0019 0B       		.uleb128 0xb
 271 001a 03       		.uleb128 0x3
 272 001b 0E       		.uleb128 0xe
 273 001c 00       		.byte	0
 274 001d 00       		.byte	0
 275 001e 03       		.uleb128 0x3
 276 001f 24       		.uleb128 0x24
 277 0020 00       		.byte	0
 278 0021 0B       		.uleb128 0xb
 279 0022 0B       		.uleb128 0xb
 280 0023 3E       		.uleb128 0x3e
 281 0024 0B       		.uleb128 0xb
 282 0025 03       		.uleb128 0x3
 283 0026 08       		.uleb128 0x8
 284 0027 00       		.byte	0
 285 0028 00       		.byte	0
 286 0029 04       		.uleb128 0x4
 287 002a 2E       		.uleb128 0x2e
 288 002b 01       		.byte	0x1
 289 002c 3F       		.uleb128 0x3f
 290 002d 0C       		.uleb128 0xc
 291 002e 03       		.uleb128 0x3
 292 002f 0E       		.uleb128 0xe
 293 0030 3A       		.uleb128 0x3a
 294 0031 0B       		.uleb128 0xb
 295 0032 3B       		.uleb128 0x3b
 296 0033 0B       		.uleb128 0xb
 297 0034 27       		.uleb128 0x27
 298 0035 0C       		.uleb128 0xc
 299 0036 11       		.uleb128 0x11
 300 0037 01       		.uleb128 0x1
 301 0038 12       		.uleb128 0x12
ARM GAS  /tmp/ccRvEjt0.s 			page 7


 302 0039 01       		.uleb128 0x1
 303 003a 40       		.uleb128 0x40
 304 003b 06       		.uleb128 0x6
 305 003c 9642     		.uleb128 0x2116
 306 003e 0C       		.uleb128 0xc
 307 003f 01       		.uleb128 0x1
 308 0040 13       		.uleb128 0x13
 309 0041 00       		.byte	0
 310 0042 00       		.byte	0
 311 0043 05       		.uleb128 0x5
 312 0044 34       		.uleb128 0x34
 313 0045 00       		.byte	0
 314 0046 03       		.uleb128 0x3
 315 0047 0E       		.uleb128 0xe
 316 0048 3A       		.uleb128 0x3a
 317 0049 0B       		.uleb128 0xb
 318 004a 3B       		.uleb128 0x3b
 319 004b 0B       		.uleb128 0xb
 320 004c 49       		.uleb128 0x49
 321 004d 13       		.uleb128 0x13
 322 004e 02       		.uleb128 0x2
 323 004f 0A       		.uleb128 0xa
 324 0050 00       		.byte	0
 325 0051 00       		.byte	0
 326 0052 06       		.uleb128 0x6
 327 0053 2E       		.uleb128 0x2e
 328 0054 00       		.byte	0
 329 0055 3F       		.uleb128 0x3f
 330 0056 0C       		.uleb128 0xc
 331 0057 03       		.uleb128 0x3
 332 0058 0E       		.uleb128 0xe
 333 0059 3A       		.uleb128 0x3a
 334 005a 0B       		.uleb128 0xb
 335 005b 3B       		.uleb128 0x3b
 336 005c 0B       		.uleb128 0xb
 337 005d 27       		.uleb128 0x27
 338 005e 0C       		.uleb128 0xc
 339 005f 11       		.uleb128 0x11
 340 0060 01       		.uleb128 0x1
 341 0061 12       		.uleb128 0x12
 342 0062 01       		.uleb128 0x1
 343 0063 40       		.uleb128 0x40
 344 0064 0A       		.uleb128 0xa
 345 0065 9742     		.uleb128 0x2117
 346 0067 0C       		.uleb128 0xc
 347 0068 00       		.byte	0
 348 0069 00       		.byte	0
 349 006a 00       		.byte	0
 350              		.section	.debug_loc,"",%progbits
 351              	.Ldebug_loc0:
 352              	.LLST0:
 353 0000 00000000 		.4byte	.LFB0-.Ltext0
 354 0004 04000000 		.4byte	.LCFI0-.Ltext0
 355 0008 0200     		.2byte	0x2
 356 000a 7D       		.byte	0x7d
 357 000b 00       		.sleb128 0
 358 000c 04000000 		.4byte	.LCFI0-.Ltext0
ARM GAS  /tmp/ccRvEjt0.s 			page 8


 359 0010 08000000 		.4byte	.LCFI1-.Ltext0
 360 0014 0200     		.2byte	0x2
 361 0016 7D       		.byte	0x7d
 362 0017 04       		.sleb128 4
 363 0018 08000000 		.4byte	.LCFI1-.Ltext0
 364 001c F8000000 		.4byte	.LFE0-.Ltext0
 365 0020 0200     		.2byte	0x2
 366 0022 7D       		.byte	0x7d
 367 0023 10       		.sleb128 16
 368 0024 00000000 		.4byte	0
 369 0028 00000000 		.4byte	0
 370              		.section	.debug_aranges,"",%progbits
 371 0000 1C000000 		.4byte	0x1c
 372 0004 0200     		.2byte	0x2
 373 0006 00000000 		.4byte	.Ldebug_info0
 374 000a 04       		.byte	0x4
 375 000b 00       		.byte	0
 376 000c 0000     		.2byte	0
 377 000e 0000     		.2byte	0
 378 0010 00000000 		.4byte	.Ltext0
 379 0014 0C010000 		.4byte	.Letext0-.Ltext0
 380 0018 00000000 		.4byte	0
 381 001c 00000000 		.4byte	0
 382              		.section	.debug_line,"",%progbits
 383              	.Ldebug_line0:
 384 0000 49000000 		.section	.debug_str,"MS",%progbits,1
 384      02002200 
 384      00000201 
 384      FB0E0D00 
 384      01010101 
 385              	.LASF6:
 386 0000 7372632F 		.ascii	"src/timer.c\000"
 386      74696D65 
 386      722E6300 
 387              	.LASF8:
 388 000c 696E6974 		.ascii	"initialize_timer_tick\000"
 388      69616C69 
 388      7A655F74 
 388      696D6572 
 388      5F746963 
 389              	.LASF0:
 390 0022 6C6F6E67 		.ascii	"long unsigned int\000"
 390      20756E73 
 390      69676E65 
 390      6420696E 
 390      7400
 391              	.LASF4:
 392 0034 726C645F 		.ascii	"rld_cnts\000"
 392      636E7473 
 392      00
 393              	.LASF7:
 394 003d 2F686F6D 		.ascii	"/home/jun/projects/critical_section\000"
 394      652F6A75 
 394      6E2F7072 
 394      6F6A6563 
 394      74732F63 
 395              	.LASF1:
ARM GAS  /tmp/ccRvEjt0.s 			page 9


 396 0061 756E7369 		.ascii	"unsigned char\000"
 396      676E6564 
 396      20636861 
 396      7200
 397              	.LASF3:
 398 006f 70636C6B 		.ascii	"pclk_freq\000"
 398      5F667265 
 398      7100
 399              	.LASF5:
 400 0079 474E5520 		.ascii	"GNU C 4.8.4 20140725 (release) [ARM/embedded-4_8-br"
 400      4320342E 
 400      382E3420 
 400      32303134 
 400      30373235 
 401 00ac 616E6368 		.ascii	"anch revision 213147] -mcpu=arm7tdmi -marm -gdwarf-"
 401      20726576 
 401      6973696F 
 401      6E203231 
 401      33313437 
 402 00df 32202D4F 		.ascii	"2 -O0 -fomit-frame-pointer\000"
 402      30202D66 
 402      6F6D6974 
 402      2D667261 
 402      6D652D70 
 403              	.LASF9:
 404 00fa 546D725F 		.ascii	"Tmr_TickISR_Handler\000"
 404      5469636B 
 404      4953525F 
 404      48616E64 
 404      6C657200 
 405              	.LASF2:
 406 010e 73686F72 		.ascii	"short unsigned int\000"
 406      7420756E 
 406      7369676E 
 406      65642069 
 406      6E7400
 407              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140725 (release) [ARM/embedded-4_8-br
ARM GAS  /tmp/ccRvEjt0.s 			page 10


DEFINED SYMBOLS
                            *ABS*:00000000 timer.c
     /tmp/ccRvEjt0.s:48     .text:00000000 $a
     /tmp/ccRvEjt0.s:51     .text:00000000 initialize_timer_tick
     /tmp/ccRvEjt0.s:133    .text:000000cc $d
     /tmp/ccRvEjt0.s:150    .text:000000f8 Tmr_TickISR_Handler
     /tmp/ccRvEjt0.s:147    .text:000000f8 $a
     /tmp/ccRvEjt0.s:167    .text:00000108 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
BSP_CPU_PclkFreq
